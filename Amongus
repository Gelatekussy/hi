

	game.Players.LocalPlayer.Character.Head.Transparency = 1
	game.Players.LocalPlayer.Character.Head.face:Remove()
	game.Players.LocalPlayer.Character.Torso.Transparency = 1
	game.Players.LocalPlayer.Character['Right Arm'].Transparency = 1
	game.Players.LocalPlayer.Character["Left Arm"].Transparency = 1
	game.Players.LocalPlayer.Character["Right Leg"].Transparency = 1
	game.Players.LocalPlayer.Character["Left Leg"].Transparency = 1

	Local = game:GetService('Players').LocalPlayer
	Char  = Local.Character
	touched,tpdback = false, false
	Local.CharacterAdded:connect(function(char)
		if script.Disabled ~= true then
			wait(.00001)
			loc = Char.HumanoidRootPart.Position
			Char:MoveTo(box.Position + Vector3.new(0,.5,0))
		end
	end)
	box = Instance.new('Part',workspace)
	box.Anchored = true
	box.Transparency = 1
	box.CanCollide = true
	box.Size = Vector3.new(10,1,10)
	box.Position = Vector3.new(0,10000,0)
	box.Touched:connect(function(part)
		if (part.Parent.Name == Local.Name) then
			if touched == false then
				touched = true
				function apply()
					if script.Disabled ~= true then
						no = Char.HumanoidRootPart:Clone()
						wait(.0001)
						Char.HumanoidRootPart:Destroy()
						no.Parent = Char
						Char:MoveTo(loc)
						touched = false
					end end
				if Char then
					apply()
				end
			end
		end
	end)
	repeat wait() until Char
	loc = Char.HumanoidRootPart.Position
	Char:MoveTo(box.Position + Vector3.new(0,.5,0))

	wait(0.5)

	local Player = game.Players.LocalPlayer
	local Character = Player.Character
	local Mouse = Player:GetMouse()

	Character["Robloxclassicred"].Name = "Brick1";Character["LavanderHair"].Name = "Brick2"
	Character["Kate Hair"].Name = "Brick3";Character["Pal Hair"].Name = "Brick4"
	Character["Pink Hair"].Name = "Brick5";Character["Necklace"].Name = "Brick6"
	Character["Hat1"].Name = "Brick7"

	local ClonedHats = {
		Hat1 = Character["Brick1"]:Clone(),
		Hat2 = Character["Brick2"]:Clone(),
		Hat3 = Character["Brick3"]:Clone(),
		Hat4 = Character["Brick4"]:Clone(),
		Hat5 = Character["Brick5"]:Clone(),
		Hat6 = Character["Brick6"]:Clone(),
		Hat7 = Character["Brick7"]:Clone(),
	}

	local RealHats = {
		Hat1 = Character["Brick1"],
		Hat2 = Character["Brick2"],
		Hat3 = Character["Brick3"],
		Hat4 = Character["Brick4"],
		Hat5 = Character["Brick5"],
		Hat6 = Character["Brick6"],
		Hat7 = Character["Brick7"],
	}

	local DontRemoveMesh = {

	}

	local Head = Character["Head"];local Torso = Character["Torso"]
	local RArm = Character["Right Arm"];local LArm = Character["Left Arm"]
	local RLeg = Character["Right Leg"];local LLeg = Character["Left Leg"]

	local realign = coroutine.create(function()
		while true do
			game["Run Service"].Heartbeat:Wait()
			RealHats.Hat1.Handle.CFrame = ClonedHats.Hat1.Handle.CFrame
			RealHats.Hat2.Handle.CFrame = ClonedHats.Hat2.Handle.CFrame
			RealHats.Hat3.Handle.CFrame = ClonedHats.Hat3.Handle.CFrame
			RealHats.Hat4.Handle.CFrame = ClonedHats.Hat4.Handle.CFrame
			RealHats.Hat5.Handle.CFrame = ClonedHats.Hat5.Handle.CFrame
			RealHats.Hat6.Handle.CFrame = ClonedHats.Hat6.Handle.CFrame
			RealHats.Hat7.Handle.CFrame = ClonedHats.Hat7.Handle.CFrame
		end
	end)
	coroutine.resume(realign)

	for i, v in next, ClonedHats do
		if v then
			v.Parent = Character
			v.Handle.Transparency = 1
			v.Handle.AccessoryWeld:Destroy()
			for u,Mesh in next, v:GetDescendants() do
				if Mesh:IsA("Mesh") or Mesh:IsA("SpecialMesh") then
					if table.find(DontRemoveMesh, Mesh.Parent.Parent.Name) then
					else
						Mesh:Destroy()
					end
				end
			end
		end
	end

	for i, v in next, RealHats do
		if v then
			v.Handle.CanCollide = false
			v.Handle.AccessoryWeld:Destroy()
			for u,Mesh in next, v:GetDescendants() do
				if Mesh:IsA("Mesh") or Mesh:IsA("SpecialMesh") then
					if table.find(DontRemoveMesh, Mesh.Parent.Parent.Name) then
					else
						Mesh:Destroy()
					end
				end
			end
		end
	end

	function Align(Part1,Part0,Position,Angle)
		local AlignPos = Instance.new("AlignPosition", Part1);
		AlignPos.Parent.CanCollide = false;
		AlignPos.ApplyAtCenterOfMass = true;
		AlignPos.MaxForce = 67752;
		AlignPos.MaxVelocity = math.huge/9e110;
		AlignPos.ReactionForceEnabled = false;
		AlignPos.Responsiveness = 200;
		AlignPos.RigidityEnabled = false;
		local AlignOri = Instance.new("AlignOrientation", Part1);
		AlignOri.MaxAngularVelocity = math.huge/9e110;
		AlignOri.MaxTorque = 67752;
		AlignOri.PrimaryAxisOnly = false;
		AlignOri.ReactionTorqueEnabled = false;
		AlignOri.Responsiveness = 200;
		AlignOri.RigidityEnabled = false;
		local AttachmentA=Instance.new("Attachment",Part1);
		local AttachmentB=Instance.new("Attachment",Part0);
		AttachmentB.Orientation = Angle
		AttachmentB.Position = Position
		AlignPos.Attachment0 = AttachmentA;
		AlignPos.Attachment1 = AttachmentB;
		AlignOri.Attachment0 = AttachmentA;
		AlignOri.Attachment1 = AttachmentB;
	end

	--[[ Alignment and Measurements ]]--
	Align(ClonedHats.Hat1.Handle, RLeg, Vector3.new(0,0,0), Vector3.new(90,0,0))
	Align(ClonedHats.Hat2.Handle, LLeg, Vector3.new(-0,0,0), Vector3.new(90,0,0))
	Align(ClonedHats.Hat3.Handle, Torso, Vector3.new(0,-1,0), Vector3.new(0,90,0))
	Align(ClonedHats.Hat6.Handle, Head, Vector3.new(0,-1.5,0), Vector3.new(0,90,0))
	Align(ClonedHats.Hat4.Handle, Torso, Vector3.new(0,-0.2,-0.5), Vector3.new(0,90,0))
	Align(ClonedHats.Hat5.Handle, Torso, Vector3.new(0.5,-0.8,1), Vector3.new(90,0,0))
	Align(ClonedHats.Hat7.Handle, Torso, Vector3.new(-0.5,-0.8,1), Vector3.new(90,0,0))
